{"ast":null,"code":"var _jsxFileName = \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js\";\nimport React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Editar.css'; // Importamos el CSS externo\n\nfunction EditPersona() {\n  var _location$state;\n\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.updatePersonaInList;\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: []\n  });\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n  useEffect(() => {\n    TutorialDataService.getAllTutorials().then(response => setAvailableTutorials(response.data)).catch(error => console.error('Error al cargar tutoriales:', error));\n    AgendaDataService.getPersona(id).then(response => {\n      setPersona(response.data);\n      setSelectedTutorials(response.data.tutoriales || []);\n    }).catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = e => {\n    e.preventDefault();\n    const personaData = { ...persona,\n      tutoriales: selectedTutorials\n    };\n    AgendaDataService.updatePersona(id, personaData).then(() => {\n      if (updatePersonaInList) updatePersonaInList(personaData);\n      history.push(\"/\");\n    }).catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPersona({ ...persona,\n      [name]: value\n    });\n  };\n\n  const toggleTutorialSelection = tutorialId => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title));\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]);\n      }\n    }\n  };\n\n  return React.createElement(Container, {\n    className: \"contenedor-editar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"editar-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titulo-editar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Editar Persona\"), React.createElement(Form, {\n    onSubmit: editPersona,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce nombre\",\n    name: \"nombre\",\n    value: persona.nombre,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"apellido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Apellido\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce apellido\",\n    name: \"apellido\",\n    value: persona.apellido,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"direccion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Direcci\\xF3n\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce direcci\\xF3n\",\n    name: \"direccion\",\n    value: persona.direccion,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"codigoPostal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"C\\xF3digo Postal\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce c\\xF3digo postal\",\n    name: \"codigoPostal\",\n    value: persona.codigoPostal,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"ciudad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Ciudad\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce ciudad\",\n    name: \"ciudad\",\n    value: persona.ciudad,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"fechaNacimiento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Fecha de Nacimiento\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"fechaNacimiento\",\n    value: persona.fechaNacimiento,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Tutoriales asignados\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, selectedTutorials.length > 0 ? `Seleccionados: ${selectedTutorials.join(\", \")}` : \"NingÃºn tutorial seleccionado\"), React.createElement(Button, {\n    className: \"boton-seleccionar\",\n    onClick: () => setShowTutorialModal(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"boton-actualizar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Actualizar\"))), React.createElement(Modal, {\n    show: showTutorialModal,\n    onHide: () => setShowTutorialModal(false),\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tutorials-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, availableTutorials.map(tutorial => React.createElement(\"div\", {\n    key: tutorial.id,\n    className: `tutorial-card ${selectedTutorials.includes(tutorial.title) ? \"selected\" : \"\"}`,\n    onClick: () => toggleTutorialSelection(tutorial.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tutorial.url || \"https://via.placeholder.com/80\",\n    alt: tutorial.title,\n    className: \"tutorial-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"tutorial-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, tutorial.title), React.createElement(\"p\", {\n    className: \"tutorial-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, tutorial.description || \"Sin descripciÃ³n\")))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"boton-confirmar\",\n    onClick: () => setShowTutorialModal(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Confirmar selecci\\xF3n\"))));\n}\n\nexport default EditPersona;","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js"],"names":["React","useEffect","useState","AgendaDataService","TutorialDataService","useHistory","useLocation","Modal","ListGroup","Form","Button","Container","Col","Row","Card","EditPersona","id","window","location","pathname","split","history","updatePersonaInList","state","persona","setPersona","nombre","apellido","direccion","codigoPostal","ciudad","fechaNacimiento","tutoriales","availableTutorials","setAvailableTutorials","selectedTutorials","setSelectedTutorials","showTutorialModal","setShowTutorialModal","getAllTutorials","then","response","data","catch","error","console","getPersona","editPersona","e","preventDefault","personaData","updatePersona","push","handleChange","name","value","target","toggleTutorialSelection","tutorialId","tutorial","find","tut","includes","title","filter","length","join","map","url","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Editar.css'; // Importamos el CSS externo\n\nfunction EditPersona() {\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = location.state?.updatePersonaInList;\n\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: []\n  });\n\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n\n  useEffect(() => {\n    TutorialDataService.getAllTutorials()\n      .then(response => setAvailableTutorials(response.data))\n      .catch(error => console.error('Error al cargar tutoriales:', error));\n\n    AgendaDataService.getPersona(id)\n      .then(response => {\n        setPersona(response.data);\n        setSelectedTutorials(response.data.tutoriales || []);\n      })\n      .catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = (e) => {\n    e.preventDefault();\n    const personaData = { ...persona, tutoriales: selectedTutorials };\n    AgendaDataService.updatePersona(id, personaData)\n      .then(() => {\n        if (updatePersonaInList) updatePersonaInList(personaData);\n        history.push(\"/\");\n      })\n      .catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPersona({\n      ...persona,\n      [name]: value,\n    });\n  };\n\n  const toggleTutorialSelection = (tutorialId) => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title));\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]);\n      }\n    }\n  };\n\n  return (\n    <Container className=\"contenedor-editar\">\n      <Card className=\"editar-card\">\n        <h3 className=\"titulo-editar\">Editar Persona</h3>\n        <Form onSubmit={editPersona}>\n          <Row>\n            <Form.Group as={Col} controlId=\"nombre\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce nombre\"\n                name=\"nombre\"\n                value={persona.nombre}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"apellido\">\n              <Form.Label>Apellido</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce apellido\"\n                name=\"apellido\"\n                value={persona.apellido}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"direccion\">\n            <Form.Label>DirecciÃ³n</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Introduce direcciÃ³n\"\n              name=\"direccion\"\n              value={persona.direccion}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Row>\n            <Form.Group as={Col} controlId=\"codigoPostal\">\n              <Form.Label>CÃ³digo Postal</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce cÃ³digo postal\"\n                name=\"codigoPostal\"\n                value={persona.codigoPostal}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"ciudad\">\n              <Form.Label>Ciudad</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce ciudad\"\n                name=\"ciudad\"\n                value={persona.ciudad}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"fechaNacimiento\">\n            <Form.Label>Fecha de Nacimiento</Form.Label>\n            <Form.Control\n              type=\"date\"\n              name=\"fechaNacimiento\"\n              value={persona.fechaNacimiento}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Tutoriales asignados</Form.Label>\n            <div>\n              {selectedTutorials.length > 0\n                ? `Seleccionados: ${selectedTutorials.join(\", \")}`\n                : \"NingÃºn tutorial seleccionado\"}\n            </div>\n            <Button className=\"boton-seleccionar\" onClick={() => setShowTutorialModal(true)}>\n              Seleccionar Tutoriales\n            </Button>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"boton-actualizar\">\n            Actualizar\n          </Button>\n        </Form>\n      </Card>\n\n      {/* Modal de selecciÃ³n de tutoriales */}\n      <Modal show={showTutorialModal} onHide={() => setShowTutorialModal(false)} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Seleccionar Tutoriales</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"tutorials-grid\">\n            {availableTutorials.map((tutorial) => (\n              <div\n                key={tutorial.id}\n                className={`tutorial-card ${selectedTutorials.includes(tutorial.title) ? \"selected\" : \"\"}`}\n                onClick={() => toggleTutorialSelection(tutorial.id)}\n              >\n                <img\n                  src={tutorial.url || \"https://via.placeholder.com/80\"}\n                  alt={tutorial.title}\n                  className=\"tutorial-img\"\n                />\n                <div className=\"tutorial-content\">\n                  <h5 className=\"tutorial-title\">{tutorial.title}</h5>\n                  <p className=\"tutorial-description\">\n                    {tutorial.description || \"Sin descripciÃ³n\"}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"boton-confirmar\" onClick={() => setShowTutorialModal(false)}>\n            Confirmar selecciÃ³n\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default EditPersona;\n"]},"metadata":{},"sourceType":"module"}