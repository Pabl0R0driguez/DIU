{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      _useUncontrolled$drop = _useUncontrolled.drop,\n      drop = _useUncontrolled$drop === void 0 ? 'down' : _useUncontrolled$drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      _useUncontrolled$alig = _useUncontrolled.align,\n      align = _useUncontrolled$alig === void 0 ? 'start' : _useUncontrolled$alig,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      _useUncontrolled$auto = _useUncontrolled.autoClose,\n      autoClose = _useUncontrolled$auto === void 0 ? true : _useUncontrolled$auto,\n      props = _objectWithoutProperties(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"align\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\", \"autoClose\"]);\n\n  var isInputGroup = useContext(InputGroupContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var isRTL = useIsRTL();\n\n  var isClosingPermitted = function isClosingPermitted(source) {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  var handleToggle = useEventCallback(function (nextShow, meta) {\n    var _meta$originalEvent;\n    /** Checking if target of event is ToggleButton,\n     * if it is then nullify mousedown event\n     */\n\n\n    var isToggleButton = (_meta$originalEvent = meta.originalEvent) == null || (_meta$originalEvent = _meta$originalEvent.target) == null ? void 0 : _meta$originalEvent.classList.contains('dropdown-toggle');\n\n    if (isToggleButton && meta.source === 'mousedown') {\n      return;\n    }\n\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null || onToggle(nextShow, meta);\n  });\n  var alignEnd = align === 'end';\n  var placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  var contextValue = useMemo(function () {\n    return {\n      align: align,\n      drop: drop,\n      isRTL: isRTL\n    };\n  }, [align, drop, isRTL]);\n  var directionClasses = {\n    down: prefix,\n    'down-centered': \"\".concat(prefix, \"-center\"),\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return (/*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: contextValue,\n      children: /*#__PURE__*/_jsx(BaseDropdown, {\n        placement: placement,\n        show: show,\n        onSelect: onSelect,\n        onToggle: handleToggle,\n        focusFirstItemOnShow: focusFirstItemOnShow,\n        itemSelector: \".\".concat(prefix, \"-item:not(.disabled):not(:disabled)\"),\n        children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, _objectSpread({}, props, {\n          ref: ref,\n          className: classNames(className, show && 'show', directionClasses[drop])\n        }))\n      })\n    })\n  );\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/node_modules/react-bootstrap/esm/Dropdown.js"],"names":["classNames","React","useContext","useMemo","BaseDropdown","useUncontrolled","useEventCallback","DropdownContext","DropdownDivider","DropdownHeader","DropdownItem","DropdownItemText","DropdownMenu","getDropdownMenuPlacement","DropdownToggle","InputGroupContext","useBootstrapPrefix","useIsRTL","alignPropType","jsx","_jsx","Dropdown","forwardRef","pProps","ref","show","bsPrefix","drop","className","align","onSelect","onToggle","focusFirstItemOnShow","as","Component","_4","navbar","autoClose","props","isInputGroup","prefix","isRTL","isClosingPermitted","source","handleToggle","nextShow","meta","_meta$originalEvent","isToggleButton","originalEvent","target","classList","contains","currentTarget","document","key","alignEnd","placement","contextValue","directionClasses","down","up","end","start","Provider","value","children","itemSelector","displayName","Object","assign","Toggle","Menu","Item","ItemText","Divider","Header"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    var _meta$originalEvent;\n    /** Checking if target of event is ToggleButton,\n     * if it is then nullify mousedown event\n     */\n    const isToggleButton = (_meta$originalEvent = meta.originalEvent) == null || (_meta$originalEvent = _meta$originalEvent.target) == null ? void 0 : _meta$originalEvent.classList.contains('dropdown-toggle');\n    if (isToggleButton && meta.source === 'mousedown') {\n      return;\n    }\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null || onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"]},"metadata":{},"sourceType":"module"}