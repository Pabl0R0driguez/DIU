{"ast":null,"code":"var _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n\n  for (var n in r) {\n    if ({}.hasOwnProperty.call(r, n)) {\n      if (e.indexOf(n) >= 0) continue;\n      t[n] = r[n];\n    }\n  }\n\n  return t;\n}\n\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\"; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nvar noop = function noop() {};\n\nvar EVENT_KEY_ATTR = dataAttr('event-key');\nvar Nav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded); // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n\n\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveTab = function getNextActiveTab(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, \"[\".concat(EVENT_KEY_ATTR, \"]:not([aria-disabled=true])\"));\n    var activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n\n    if (!tabContext) {\n      return;\n    }\n\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector(\"[\".concat(EVENT_KEY_ATTR, \"][aria-selected=true]\"));\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return (/*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleSelect,\n      children: /*#__PURE__*/_jsx(NavContext.Provider, {\n        value: {\n          role: role,\n          // used by NavLink to determine it's role\n          activeKey: makeEventKey(activeKey),\n          getControlledId: getControlledId || noop,\n          getControllerId: getControllerId || noop\n        },\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n          onKeyDown: handleKeyDown,\n          ref: mergedRef,\n          role: role\n        }))\n      })\n    })\n  );\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/node_modules/@restart/ui/esm/Nav.js"],"names":["_excluded","_objectWithoutPropertiesLoose","r","e","t","n","hasOwnProperty","call","indexOf","qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","dataAttr","dataProp","NavItem","jsx","_jsx","noop","EVENT_KEY_ATTR","Nav","forwardRef","_ref","ref","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveTab","offset","currentListNode","current","items","activeChild","querySelector","document","activeElement","index","nextIndex","length","handleSelect","key","event","handleKeyDown","nextActiveChild","preventDefault","dataset","focus","mergedRef","Provider","value","children","Object","assign","displayName","Item"],"mappings":"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","sourcesContent":["const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});"]},"metadata":{},"sourceType":"module"}