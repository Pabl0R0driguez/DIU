{"ast":null,"code":"var _jsxFileName = \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js\";\nimport React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Añadir-Editar.css';\nimport { Alert } from 'react-bootstrap';\n\nfunction EditPersona() {\n  var _location$state;\n\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.updatePersonaInList;\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: [] // Guardaremos los títulos de los tutoriales\n\n  });\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    TutorialDataService.getAllTutorials().then(response => setAvailableTutorials(response.data)).catch(error => console.error('Error al cargar tutoriales:', error));\n    AgendaDataService.getPersona(id).then(response => {\n      setPersona(response.data); // Al obtener la persona, cargamos los nombres de los tutoriales\n\n      setSelectedTutorials(response.data.tutoriales || []);\n    }).catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = e => {\n    e.preventDefault(); // Verifica si algún campo requerido está vacío\n\n    if (!persona.nombre || !persona.apellido || !persona.direccion || !persona.codigoPostal || !persona.ciudad || !persona.fechaNacimiento) {\n      setErrorMessage(\"Error: Todos los campos son obligatorios.\");\n      return; // Detiene la ejecución si algún campo está vacío\n    } // Guardamos solo los títulos de los tutoriales seleccionados\n\n\n    const personaData = { ...persona,\n      tutoriales: selectedTutorials\n    };\n    AgendaDataService.updatePersona(id, personaData).then(() => {\n      if (updatePersonaInList) updatePersonaInList(personaData);\n      history.push(\"/\");\n    }).catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPersona({ ...persona,\n      [name]: value\n    });\n  };\n\n  const toggleTutorialSelection = tutorialId => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title)); // Filtramos por título\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]); // Añadimos el título\n      }\n    }\n  };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return React.createElement(Container, {\n    className: \"contenedor-formulario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"formulario-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titulo-formulario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Editar Persona\"), React.createElement(Form, {\n    onSubmit: editPersona,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce nombre\",\n    name: \"nombre\",\n    value: persona.nombre,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"apellido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Apellido\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce apellido\",\n    name: \"apellido\",\n    value: persona.apellido,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"direccion\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Direcci\\xF3n\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce direcci\\xF3n\",\n    name: \"direccion\",\n    value: persona.direccion,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"codigoPostal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"C\\xF3digo Postal\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce c\\xF3digo postal\",\n    name: \"codigoPostal\",\n    value: persona.codigoPostal,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"ciudad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Ciudad\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce ciudad\",\n    name: \"ciudad\",\n    value: persona.ciudad,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"fechaNacimiento\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Fecha de Nacimiento\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"fechaNacimiento\",\n    value: persona.fechaNacimiento,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Tutoriales asignados\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, selectedTutorials.length > 0 ? `Seleccionados: ${selectedTutorials.join(\", \")}` : \"Ningún tutorial seleccionado\"), React.createElement(Button, {\n    className: \"button-custom mt-2\",\n    onClick: openTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"boton-enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Actualizar\"), errorMessage && React.createElement(Alert, {\n    variant: \"danger\",\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, errorMessage)))), React.createElement(Modal, {\n    show: showTutorialModal,\n    onHide: closeTutorialModal,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tutorials-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, availableTutorials.map(tutorial => React.createElement(\"div\", {\n    key: tutorial.id,\n    className: `tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`,\n    onClick: () => toggleTutorialSelection(tutorial.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tutorial.url || \"https://via.placeholder.com/80\",\n    alt: tutorial.title,\n    className: \"tutorial-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"tutorial-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, tutorial.title), React.createElement(\"p\", {\n    className: \"tutorial-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, tutorial.description || \"Sin descripción\")))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"confirm-button\",\n    onClick: closeTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Confirmar selecci\\xF3n\"))));\n}\n\nexport default EditPersona;","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js"],"names":["React","useEffect","useState","AgendaDataService","TutorialDataService","useHistory","useLocation","Modal","ListGroup","Form","Button","Container","Col","Row","Card","Alert","EditPersona","id","window","location","pathname","split","history","updatePersonaInList","state","persona","setPersona","nombre","apellido","direccion","codigoPostal","ciudad","fechaNacimiento","tutoriales","availableTutorials","setAvailableTutorials","selectedTutorials","setSelectedTutorials","showTutorialModal","setShowTutorialModal","errorMessage","setErrorMessage","getAllTutorials","then","response","data","catch","error","console","getPersona","editPersona","e","preventDefault","personaData","updatePersona","push","handleChange","name","value","target","toggleTutorialSelection","tutorialId","tutorial","find","tut","includes","title","filter","openTutorialModal","closeTutorialModal","length","join","map","some","url","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Añadir-Editar.css';\nimport { Alert } from 'react-bootstrap';\n\n\nfunction EditPersona() {\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = location.state?.updatePersonaInList;\n\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: [] // Guardaremos los títulos de los tutoriales\n  });\n\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  \n\n  useEffect(() => {\n    TutorialDataService.getAllTutorials()\n      .then(response => setAvailableTutorials(response.data))\n      .catch(error => console.error('Error al cargar tutoriales:', error));\n\n    AgendaDataService.getPersona(id)\n      .then(response => {\n        setPersona(response.data);\n        // Al obtener la persona, cargamos los nombres de los tutoriales\n        setSelectedTutorials(response.data.tutoriales || []);\n      })\n      .catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = (e) => {\n    e.preventDefault();\n\n     // Verifica si algún campo requerido está vacío\n     if (!persona.nombre || !persona.apellido || !persona.direccion || !persona.codigoPostal || !persona.ciudad || !persona.fechaNacimiento) {\n      setErrorMessage(\"Error: Todos los campos son obligatorios.\");\n      return; // Detiene la ejecución si algún campo está vacío\n    }\n\n    // Guardamos solo los títulos de los tutoriales seleccionados\n    const personaData = { ...persona, tutoriales: selectedTutorials };\n    AgendaDataService.updatePersona(id, personaData)\n      .then(() => {\n        if (updatePersonaInList) updatePersonaInList(personaData);\n        history.push(\"/\");\n      })\n      .catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPersona({\n      ...persona,\n      [name]: value,\n    });\n  };\n\n  const toggleTutorialSelection = (tutorialId) => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title)); // Filtramos por título\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]); // Añadimos el título\n      }\n    }\n  };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return (\n    <Container className=\"contenedor-formulario\">\n      <Card className=\"formulario-card\">\n        <h3 className=\"titulo-formulario\">Editar Persona</h3>\n        <Form onSubmit={editPersona}>\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"nombre\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce nombre\"\n                name=\"nombre\"\n                value={persona.nombre}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"apellido\">\n              <Form.Label>Apellido</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce apellido\"\n                name=\"apellido\"\n                value={persona.apellido}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"direccion\" className=\"mb-4\">\n            <Form.Label>Dirección</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Introduce dirección\"\n              name=\"direccion\"\n              value={persona.direccion}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"codigoPostal\">\n              <Form.Label>Código Postal</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce código postal\"\n                name=\"codigoPostal\"\n                value={persona.codigoPostal}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"ciudad\">\n              <Form.Label>Ciudad</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce ciudad\"\n                name=\"ciudad\"\n                value={persona.ciudad}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"fechaNacimiento\" className=\"mb-4\">\n            <Form.Label>Fecha de Nacimiento</Form.Label>\n            <Form.Control\n              type=\"date\"\n              name=\"fechaNacimiento\"\n              value={persona.fechaNacimiento}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Tutoriales asignados</Form.Label>\n            <div>\n              {selectedTutorials.length > 0\n                ? `Seleccionados: ${selectedTutorials.join(\", \")}`\n                : \"Ningún tutorial seleccionado\"}\n            </div>\n            <Button className=\"button-custom mt-2\" onClick={openTutorialModal}>\n              Seleccionar Tutoriales\n            </Button>\n          </Form.Group>\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className=\"boton-enviar\"\n          >\n            Actualizar\n          </Button>\n\n      {/* Mostrar el mensaje de error con Alert si hay un error */}\n              {errorMessage && (\n          <Alert variant=\"danger\" className='mt-4'>\n            <strong>{errorMessage}</strong>\n          </Alert>\n        )}\n        </Form>\n      </Card>\n      <Modal show={showTutorialModal} onHide={closeTutorialModal} centered>\n  <Modal.Header closeButton>\n    <Modal.Title>Seleccionar Tutoriales</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <div className=\"tutorials-grid\">\n      {availableTutorials.map((tutorial) => (\n        <div\n          key={tutorial.id}\n          className={`tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`}\n          onClick={() => toggleTutorialSelection(tutorial.id)}\n        >\n          <img src={tutorial.url || \"https://via.placeholder.com/80\"} alt={tutorial.title} className=\"tutorial-img\" />\n          <div>\n            <h5 className=\"tutorial-title\">{tutorial.title}</h5>\n            <p className=\"tutorial-description\">{tutorial.description || \"Sin descripción\"}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button className=\"confirm-button\" onClick={closeTutorialModal}>Confirmar selección</Button>\n  </Modal.Footer>\n</Modal>\n\n    </Container>\n  );\n}\n\nexport default EditPersona;\n"]},"metadata":{},"sourceType":"module"}