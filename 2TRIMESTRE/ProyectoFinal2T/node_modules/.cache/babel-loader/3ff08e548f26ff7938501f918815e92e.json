{"ast":null,"code":"var _jsxFileName = \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Inicio.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ProgressBar, Button, Modal, Form, Row, Col, Table, Container } from \"react-bootstrap\";\nimport AgendaDataService from \"../services/agenda.service\";\nimport { UserContext } from \"../provider/UserProvider\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Inicio.css\";\n\nconst Inicio = () => {\n  var _selectedPersona$tuto;\n\n  const [personas, setPersonas] = useState([]); // Lista de personas filtradas\n\n  const [searchPersona, setSearchPersona] = useState(\"\"); // Valor de búsqueda\n\n  const [selectedPersona, setSelectedPersona] = useState(null); // Persona seleccionada\n\n  const [modalState, setModalState] = useState(\"informacion\"); // Estado del modal\n\n  const [tutorials, setTutorials] = useState([]); // Lista de tutoriales\n\n  const userContext = useContext(UserContext);\n  const totalPersonas = 50; // Total fijo de 50 personas\n\n  useEffect(() => {\n    // Al cargar el componente, obtener las personas de la base de datos\n    retrievePersonas();\n  }, []); // Función para manejar la búsqueda de personas\n\n  const onChangeSearchPersona = e => {\n    setSearchPersona(e.target.value);\n  }; // Función para recuperar todas las personas\n\n\n  const retrievePersonas = () => {\n    AgendaDataService.getAllPersonas().then(response => {\n      setPersonas(response.data); // Guardamos las personas filtradas\n    }).catch(e => console.error(e));\n  }; // Función para buscar personas por nombre\n\n\n  const searchPersonaFunction = () => {\n    if (!searchPersona.trim()) {\n      retrievePersonas(); // Si no hay texto de búsqueda, recargamos todas las personas\n\n      return;\n    }\n\n    AgendaDataService.findByNombre(searchPersona).then(response => setPersonas(response.data)).catch(e => console.error(\"Error en la búsqueda:\", e));\n  }; // Función para manejar el clic en una persona\n\n\n  const handlePersonaClick = persona => {\n    setSelectedPersona(persona);\n    setModalState(\"informacion\");\n  };\n\n  const showTutorials = persona => {\n    setTutorials(persona.tutoriales || []);\n    setModalState(\"tutoriales\");\n  }; // Cerrar modal de persona\n\n\n  const closeModal = () => {\n    setSelectedPersona(null);\n  }; // Eliminar persona\n\n\n  const removePersona = persona => {\n    AgendaDataService.deletePersona(persona.id).then(() => retrievePersonas()).catch(e => console.error(\"Error al eliminar la persona:\", e));\n  }; // Calcular el porcentaje de progreso basado en el total fijo de 50 personas\n\n\n  const progreso = personas.length / totalPersonas * 100;\n  return React.createElement(\"div\", {\n    className: \"fondo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Container, {\n    id: \"contenido\",\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"mb-3 progress-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 8,\n    className: \"d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(ProgressBar, {\n    now: progreso,\n    label: `${Math.round(progreso)}%`,\n    className: \"progress-bar-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    className: \"mb-3 align-items-center buscador-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Buscar por nombre\",\n    value: searchPersona,\n    onChange: onChangeSearchPersona,\n    className: \"modern-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"link\",\n    onClick: searchPersonaFunction,\n    className: \"search-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Buscar\")))), React.createElement(Row, {\n    className: \"mt-2 tabla-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"modern-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Apellido\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, personas.map(persona => React.createElement(\"tr\", {\n    key: persona.id,\n    onClick: () => handlePersonaClick(persona),\n    style: {\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, persona.nombre), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, persona.apellido)))))), modalState === \"informacion\" && selectedPersona && React.createElement(Modal, {\n    show: true,\n    onHide: closeModal,\n    className: \"custom-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Detalles de \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.nombre, \" \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.apellido)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Direcci\\xF3n:\"), \" \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.direccion), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"C\\xF3digo Postal:\"), \" \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.codigoPostal), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Ciudad:\"), \" \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.ciudad), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Fecha de Nacimiento:\"), \" \", selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.fechaNacimiento), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Tutoriales:\"), \" \", (selectedPersona === null || selectedPersona === void 0 ? void 0 : (_selectedPersona$tuto = selectedPersona.tutoriales) === null || _selectedPersona$tuto === void 0 ? void 0 : _selectedPersona$tuto.length) > 0 ? selectedPersona === null || selectedPersona === void 0 ? void 0 : selectedPersona.tutoriales.join(\", \") : \"Ninguno\")), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"link\",\n    onClick: () => showTutorials(selectedPersona),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Ver Tutoriales\"), React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => {\n      removePersona(selectedPersona);\n      closeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Eliminar\"))), modalState === \"tutoriales\" && React.createElement(Modal, {\n    show: true,\n    onHide: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Tutoriales\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, tutorials.length > 0 ? React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, tutorials.map((tutorial, index) => React.createElement(\"li\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, tutorial))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"No hay tutoriales disponibles.\")), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setModalState(\"informacion\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Volver\")))));\n};\n\nexport default Inicio;","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Inicio.js"],"names":["React","useState","useEffect","useContext","ProgressBar","Button","Modal","Form","Row","Col","Table","Container","AgendaDataService","UserContext","Link","Inicio","personas","setPersonas","searchPersona","setSearchPersona","selectedPersona","setSelectedPersona","modalState","setModalState","tutorials","setTutorials","userContext","totalPersonas","retrievePersonas","onChangeSearchPersona","e","target","value","getAllPersonas","then","response","data","catch","console","error","searchPersonaFunction","trim","findByNombre","handlePersonaClick","persona","showTutorials","tutoriales","closeModal","removePersona","deletePersona","id","progreso","length","Math","round","map","cursor","nombre","apellido","direccion","codigoPostal","ciudad","fechaNacimiento","join","tutorial","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,GAA3C,EAAgDC,GAAhD,EAAqDC,KAArD,EAA4DC,SAA5D,QAA6E,iBAA7E;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,sBAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC,CADmB,CAC2B;;AAC9C,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD,CAFmB,CAEqC;;AACxD,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,IAAD,CAAtD,CAHmB,CAG2C;;AAC9D,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,aAAD,CAA5C,CAJmB,CAI0C;;AAC7D,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C,CALmB,CAK6B;;AAChD,QAAMyB,WAAW,GAAGvB,UAAU,CAACU,WAAD,CAA9B;AAEA,QAAMc,aAAa,GAAG,EAAtB,CARmB,CAQO;;AAE1BzB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA0B,IAAAA,gBAAgB;AACjB,GAHQ,EAGN,EAHM,CAAT,CAVmB,CAenB;;AACA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnCX,IAAAA,gBAAgB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD,GAFD,CAhBmB,CAoBnB;;;AACA,QAAMJ,gBAAgB,GAAG,MAAM;AAC7BhB,IAAAA,iBAAiB,CAACqB,cAAlB,GACGC,IADH,CACSC,QAAD,IAAc;AAClBlB,MAAAA,WAAW,CAACkB,QAAQ,CAACC,IAAV,CAAX,CADkB,CACU;AAC7B,KAHH,EAIGC,KAJH,CAIUP,CAAD,IAAOQ,OAAO,CAACC,KAAR,CAAcT,CAAd,CAJhB;AAKD,GAND,CArBmB,CA6BnB;;;AACA,QAAMU,qBAAqB,GAAG,MAAM;AAClC,QAAI,CAACtB,aAAa,CAACuB,IAAd,EAAL,EAA2B;AACzBb,MAAAA,gBAAgB,GADS,CACL;;AACpB;AACD;;AAEDhB,IAAAA,iBAAiB,CAAC8B,YAAlB,CAA+BxB,aAA/B,EACGgB,IADH,CACSC,QAAD,IAAclB,WAAW,CAACkB,QAAQ,CAACC,IAAV,CADjC,EAEGC,KAFH,CAEUP,CAAD,IAAOQ,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCT,CAAvC,CAFhB;AAGD,GATD,CA9BmB,CAyCnB;;;AACA,QAAMa,kBAAkB,GAAIC,OAAD,IAAa;AACtCvB,IAAAA,kBAAkB,CAACuB,OAAD,CAAlB;AACArB,IAAAA,aAAa,CAAC,aAAD,CAAb;AACD,GAHD;;AAKA,QAAMsB,aAAa,GAAID,OAAD,IAAa;AACjCnB,IAAAA,YAAY,CAACmB,OAAO,CAACE,UAAR,IAAsB,EAAvB,CAAZ;AACAvB,IAAAA,aAAa,CAAC,YAAD,CAAb;AACD,GAHD,CA/CmB,CAoDnB;;;AACA,QAAMwB,UAAU,GAAG,MAAM;AACvB1B,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD,CArDmB,CAyDnB;;;AACA,QAAM2B,aAAa,GAAIJ,OAAD,IAAa;AACjChC,IAAAA,iBAAiB,CAACqC,aAAlB,CAAgCL,OAAO,CAACM,EAAxC,EACGhB,IADH,CACQ,MAAMN,gBAAgB,EAD9B,EAEGS,KAFH,CAEUP,CAAD,IAAOQ,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CT,CAA/C,CAFhB;AAGD,GAJD,CA1DmB,CAgEnB;;;AACA,QAAMqB,QAAQ,GAAInC,QAAQ,CAACoC,MAAT,GAAkBzB,aAAnB,GAAoC,GAArD;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEwB,QADP;AAEE,IAAA,KAAK,EAAG,GAAEE,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAqB,GAFjC;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,EAaE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEjC,aAHT;AAIE,IAAA,QAAQ,EAAEW,qBAJZ;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEW,qBAAhC;AAAuD,IAAA,SAAS,EAAC,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,CADF,CAbF,EA+BE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAyC,IAAA,SAAS,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,QAAQ,CAACuC,GAAT,CAAcX,OAAD,IACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACM,EAAjB;AAAqB,IAAA,OAAO,EAAE,MAAMP,kBAAkB,CAACC,OAAD,CAAtD;AAAiE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAO,CAACa,MAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,OAAO,CAACc,QAAb,CAFF,CADD,CADH,CAPF,CADF,CA/BF,EAmDGpC,UAAU,KAAK,aAAf,IAAgCF,eAAhC,IACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAb;AAAmB,IAAA,MAAM,EAAE2B,UAA3B;AAAuC,IAAA,SAAS,EAAC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0B3B,eAA1B,aAA0BA,eAA1B,uBAA0BA,eAAe,CAAEqC,MAA3C,OAAoDrC,eAApD,aAAoDA,eAApD,uBAAoDA,eAAe,CAAEsC,QAArE,CADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,OAAkCtC,eAAlC,aAAkCA,eAAlC,uBAAkCA,eAAe,CAAEuC,SAAnD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAL,OAAsCvC,eAAtC,aAAsCA,eAAtC,uBAAsCA,eAAe,CAAEwC,YAAvD,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,OAA+BxC,eAA/B,aAA+BA,eAA/B,uBAA+BA,eAAe,CAAEyC,MAAhD,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAL,OAA4CzC,eAA5C,aAA4CA,eAA5C,uBAA4CA,eAAe,CAAE0C,eAA7D,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,OAAmC,CAAA1C,eAAe,SAAf,IAAAA,eAAe,WAAf,qCAAAA,eAAe,CAAE0B,UAAjB,gFAA6BM,MAA7B,IAAsC,CAAtC,GAA0ChC,eAA1C,aAA0CA,eAA1C,uBAA0CA,eAAe,CAAE0B,UAAjB,CAA4BiB,IAA5B,CAAiC,IAAjC,CAA1C,GAAmF,SAAtH,CALF,CAJF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAE,MAAMlB,aAAa,CAACzB,eAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAE,MAAM;AAAE4B,MAAAA,aAAa,CAAC5B,eAAD,CAAb;AAAgC2B,MAAAA,UAAU;AAAK,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAXF,CApDJ,EAuEGzB,UAAU,KAAK,YAAf,IACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAb;AAAmB,IAAA,MAAM,EAAEyB,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,SAAS,CAAC4B,MAAV,GAAmB,CAAnB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,SAAS,CAAC+B,GAAV,CAAc,CAACS,QAAD,EAAWC,KAAX,KACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,QAAjB,CADD,CADH,CADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARJ,CAJF,EAeE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE,MAAMzC,aAAa,CAAC,aAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAfF,CAxEJ,CADF,CADF;AAiGD,CApKD;;AAsKA,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { ProgressBar, Button, Modal, Form, Row, Col, Table, Container } from \"react-bootstrap\";\nimport AgendaDataService from \"../services/agenda.service\";\nimport { UserContext } from \"../provider/UserProvider\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Inicio.css\";\n\nconst Inicio = () => {\n  const [personas, setPersonas] = useState([]); // Lista de personas filtradas\n  const [searchPersona, setSearchPersona] = useState(\"\"); // Valor de búsqueda\n  const [selectedPersona, setSelectedPersona] = useState(null); // Persona seleccionada\n  const [modalState, setModalState] = useState(\"informacion\"); // Estado del modal\n  const [tutorials, setTutorials] = useState([]); // Lista de tutoriales\n  const userContext = useContext(UserContext);\n\n  const totalPersonas = 50; // Total fijo de 50 personas\n\n  useEffect(() => {\n    // Al cargar el componente, obtener las personas de la base de datos\n    retrievePersonas();\n  }, []);\n\n  // Función para manejar la búsqueda de personas\n  const onChangeSearchPersona = (e) => {\n    setSearchPersona(e.target.value);\n  };\n\n  // Función para recuperar todas las personas\n  const retrievePersonas = () => {\n    AgendaDataService.getAllPersonas()\n      .then((response) => {\n        setPersonas(response.data); // Guardamos las personas filtradas\n      })\n      .catch((e) => console.error(e));\n  };\n\n  // Función para buscar personas por nombre\n  const searchPersonaFunction = () => {\n    if (!searchPersona.trim()) {\n      retrievePersonas(); // Si no hay texto de búsqueda, recargamos todas las personas\n      return;\n    }\n\n    AgendaDataService.findByNombre(searchPersona)\n      .then((response) => setPersonas(response.data))\n      .catch((e) => console.error(\"Error en la búsqueda:\", e));\n  };\n\n  // Función para manejar el clic en una persona\n  const handlePersonaClick = (persona) => {\n    setSelectedPersona(persona);\n    setModalState(\"informacion\");\n  };\n\n  const showTutorials = (persona) => {\n    setTutorials(persona.tutoriales || []);\n    setModalState(\"tutoriales\");\n  };\n\n  // Cerrar modal de persona\n  const closeModal = () => {\n    setSelectedPersona(null);\n  };\n\n  // Eliminar persona\n  const removePersona = (persona) => {\n    AgendaDataService.deletePersona(persona.id)\n      .then(() => retrievePersonas())\n      .catch((e) => console.error(\"Error al eliminar la persona:\", e));\n  };\n\n  // Calcular el porcentaje de progreso basado en el total fijo de 50 personas\n  const progreso = (personas.length / totalPersonas) * 100;\n\n  return (\n    <div className=\"fondo-container\">\n      <Container id=\"contenido\" className=\"mt-5\">\n        {/* Barra de progreso */}\n        <Row className=\"mb-3 progress-container\">\n          <Col md={8} className=\"d-flex justify-content-center\">\n            <ProgressBar\n              now={progreso}\n              label={`${Math.round(progreso)}%`}\n              className=\"progress-bar-custom\"\n            />\n          </Col>\n        </Row>\n\n        {/* Buscador */}\n        <Row className=\"mb-3 align-items-center buscador-container\">\n          <Col md={12}>\n            <div className=\"d-flex\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Buscar por nombre\"\n                value={searchPersona}\n                onChange={onChangeSearchPersona}\n                className=\"modern-input\"\n              />\n              <Button variant=\"link\" onClick={searchPersonaFunction} className=\"search-btn\">\n                Buscar\n              </Button>\n            </div>\n          </Col>\n        </Row>\n\n        {/* Tabla de personas */}\n        <Row className=\"mt-2 tabla-container\">\n          <Table striped bordered hover responsive className=\"modern-table\">\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Apellido</th>\n              </tr>\n            </thead>\n            <tbody>\n              {personas.map((persona) => (\n                <tr key={persona.id} onClick={() => handlePersonaClick(persona)} style={{ cursor: \"pointer\" }}>\n                  <td>{persona.nombre}</td>\n                  <td>{persona.apellido}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Row>\n\n        {/* Modal de Información */}\n        {modalState === \"informacion\" && selectedPersona && (\n          <Modal show={true} onHide={closeModal} className=\"custom-modal\">\n            <Modal.Header closeButton>\n              <Modal.Title>Detalles de {selectedPersona?.nombre} {selectedPersona?.apellido}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div><strong>Dirección:</strong> {selectedPersona?.direccion}</div>\n              <div><strong>Código Postal:</strong> {selectedPersona?.codigoPostal}</div>\n              <div><strong>Ciudad:</strong> {selectedPersona?.ciudad}</div>\n              <div><strong>Fecha de Nacimiento:</strong> {selectedPersona?.fechaNacimiento}</div>\n              <div><strong>Tutoriales:</strong> {selectedPersona?.tutoriales?.length > 0 ? selectedPersona?.tutoriales.join(\", \") : \"Ninguno\"}</div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"link\" onClick={() => showTutorials(selectedPersona)}>Ver Tutoriales</Button>\n              <Button variant=\"danger\" onClick={() => { removePersona(selectedPersona); closeModal(); }}>Eliminar</Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n\n        {/* Modal de Tutoriales */}\n        {modalState === \"tutoriales\" && (\n          <Modal show={true} onHide={closeModal}>\n            <Modal.Header closeButton>\n              <Modal.Title>Tutoriales</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {tutorials.length > 0 ? (\n                <ul>\n                  {tutorials.map((tutorial, index) => (\n                    <li key={index}>{tutorial}</li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No hay tutoriales disponibles.</p>\n              )}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={() => setModalState(\"informacion\")}>Volver</Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Inicio;\n"]},"metadata":{},"sourceType":"module"}