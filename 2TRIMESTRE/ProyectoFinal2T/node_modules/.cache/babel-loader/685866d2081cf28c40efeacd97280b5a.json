{"ast":null,"code":"var _jsxFileName = \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/A\\xF1adir.js\";\nimport React, { useState, useEffect } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Row, Col, Container, Card, Modal } from 'react-bootstrap';\nimport { Alert } from 'react-bootstrap';\nimport \"../styles/Añadir-Editar.css\";\n\nfunction Añadir() {\n  const [persona, setPersona] = useState({\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: []\n  }); // Objeto que almacena los datos de la persona\n\n  const [availableTutorials, setAvailableTutorials] = useState([]); // Lista de tutoriales disponibles para la persona\n\n  const [selectedTutorials, setSelectedTutorials] = useState([]); // Tutoriales seleccionados\n\n  const [showTutorialModal, setShowTutorialModal] = useState(false); // Controla la visibilidad del modal para seleccioanar tutoriales\n\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(''); // Se ejecuta el montar el componente, mostramos lista de todos los tutoriales disponibles\n  // Los guardamos en availableTutorials\n\n  useEffect(() => {\n    TutorialDataService.getAllTutorials().then(response => {\n      setAvailableTutorials(response.data);\n    }).catch(error => {\n      console.error('Error al cargar tutoriales:', error);\n    });\n  }, []);\n\n  const agregarPersona = e => {\n    e.preventDefault(); // Verifica si algún campo requerido está vacío\n\n    if (!persona.nombre || !persona.apellido || !persona.direccion || !persona.codigoPostal || !persona.ciudad || !persona.fechaNacimiento) {\n      setErrorMessage(\"Error: Todos los campos son obligatorios.\");\n      return; // Detiene la ejecución si algún campo está vacío\n    }\n\n    const personaData = { ...persona,\n      tutoriales: selectedTutorials.map(tut => tut.title)\n    }; // Si la fecha de nacimiento ya fue validada, podemos proceder\n\n    AgendaDataService.createPersona(personaData).then(response => {\n      history.push(\"/\"); // Redirige a la página principal\n\n      console.log('Persona agregada:', response.data);\n    }).catch(error => {\n      console.error('Error al agregar persona:', error);\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPersona({ ...persona,\n      [name]: value\n    });\n  };\n\n  const toggleTutorialSelection = tutorialId => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.some(tut => tut.id === tutorialId)) {\n        setSelectedTutorials(selectedTutorials.filter(tut => tut.id !== tutorialId));\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial]);\n      }\n    }\n  }; // Función para manejar el cambio en el campo de código postal\n\n\n  const handleCodigoPostalChange = e => {\n    // Permitimos solo números\n    const value = e.target.value; // Verificamos si la entrada solo contiene números\n\n    if (/^\\d*$/.test(value)) {\n      setPersona({ ...persona,\n        codigoPostal: value\n      });\n    }\n  };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return React.createElement(Container, {\n    className: \"contenedor-formulario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"formulario-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titulo-formulario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"A\\xF1adir Persona\"), React.createElement(Form, {\n    onSubmit: agregarPersona,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce nombre\",\n    name: \"nombre\",\n    value: persona.nombre,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"apellido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Apellido\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce apellido\",\n    name: \"apellido\",\n    value: persona.apellido,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"direccion\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Direcci\\xF3n\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce direcci\\xF3n\",\n    name: \"direccion\",\n    value: persona.direccion,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"codigoPostal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"C\\xF3digo Postal\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce c\\xF3digo postal\",\n    name: \"codigoPostal\",\n    value: persona.codigoPostal,\n    onChange: e => handleCodigoPostalChange(e) // Llamada al nuevo manejador\n    ,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"ciudad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Ciudad\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce ciudad\",\n    name: \"ciudad\",\n    value: persona.ciudad,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"fechaNacimiento\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Fecha de Nacimiento\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"fechaNacimiento\",\n    value: persona.fechaNacimiento,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Tutoriales asignados\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, selectedTutorials.length > 0 ? `Seleccionados: ${selectedTutorials.map(tut => tut.title).join(\", \")}` : \"Ningún tutorial seleccionado\"), React.createElement(Button, {\n    className: \"button-custom mt-2\",\n    onClick: openTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Button, {\n    type: \"submit\",\n    className: \"boton-enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"A\\xF1adir\"), errorMessage && React.createElement(Alert, {\n    variant: \"danger\",\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, errorMessage)))), React.createElement(Modal, {\n    show: showTutorialModal,\n    onHide: closeTutorialModal,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tutorials-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, availableTutorials.map(tutorial => React.createElement(\"div\", {\n    key: tutorial.id,\n    className: `tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`,\n    onClick: () => toggleTutorialSelection(tutorial.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tutorial.url || \"https://via.placeholder.com/80\",\n    alt: tutorial.title,\n    className: \"tutorial-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"tutorial-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, tutorial.title), React.createElement(\"p\", {\n    className: \"tutorial-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, tutorial.description || \"Sin descripción\")))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"confirm-button\",\n    onClick: closeTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Confirmar selecci\\xF3n\"))));\n}\n\nexport default Añadir;","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Añadir.js"],"names":["React","useState","useEffect","AgendaDataService","TutorialDataService","useHistory","Form","Button","Row","Col","Container","Card","Modal","Alert","Añadir","persona","setPersona","nombre","apellido","direccion","codigoPostal","ciudad","fechaNacimiento","tutoriales","availableTutorials","setAvailableTutorials","selectedTutorials","setSelectedTutorials","showTutorialModal","setShowTutorialModal","history","errorMessage","setErrorMessage","getAllTutorials","then","response","data","catch","error","console","agregarPersona","e","preventDefault","personaData","map","tut","title","createPersona","push","log","handleChange","name","value","target","toggleTutorialSelection","tutorialId","tutorial","find","id","some","filter","handleCodigoPostalChange","test","openTutorialModal","closeTutorialModal","length","join","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Row, Col, Container, Card, Modal } from 'react-bootstrap';\nimport { Alert } from 'react-bootstrap';\n\nimport \"../styles/Añadir-Editar.css\";\n\nfunction Añadir() {\n  const [persona, setPersona] = useState({\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: []\n  }); // Objeto que almacena los datos de la persona\n\n  const [availableTutorials, setAvailableTutorials] = useState([]); // Lista de tutoriales disponibles para la persona\n  const [selectedTutorials, setSelectedTutorials] = useState([]);  // Tutoriales seleccionados\n  const [showTutorialModal, setShowTutorialModal] = useState(false); // Controla la visibilidad del modal para seleccioanar tutoriales\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n\n\n// Se ejecuta el montar el componente, mostramos lista de todos los tutoriales disponibles\n// Los guardamos en availableTutorials\n  useEffect(() => {\n    TutorialDataService.getAllTutorials()\n      .then((response) => {\n        setAvailableTutorials(response.data);\n      })\n      .catch((error) => {\n        console.error('Error al cargar tutoriales:', error);\n      });\n  }, []);\n\n  const agregarPersona = (e) => {\n    e.preventDefault();\n  \n    // Verifica si algún campo requerido está vacío\n    if (!persona.nombre || !persona.apellido || !persona.direccion || !persona.codigoPostal || !persona.ciudad || !persona.fechaNacimiento) {\n      setErrorMessage(\"Error: Todos los campos son obligatorios.\");\n      return; // Detiene la ejecución si algún campo está vacío\n    }\n  \n    const personaData = { ...persona, tutoriales: selectedTutorials.map(tut => tut.title) };\n  \n    // Si la fecha de nacimiento ya fue validada, podemos proceder\n    AgendaDataService.createPersona(personaData)\n      .then((response) => {\n        history.push(\"/\"); // Redirige a la página principal\n        console.log('Persona agregada:', response.data);\n      })\n      .catch((error) => {\n        console.error('Error al agregar persona:', error);\n      });\n  };\n\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPersona({ ...persona, [name]: value });\n  };\n\n  const toggleTutorialSelection = (tutorialId) => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n    if (tutorial) {\n      if (selectedTutorials.some(tut => tut.id === tutorialId)) {\n        setSelectedTutorials(selectedTutorials.filter(tut => tut.id !== tutorialId));\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial]);\n      }\n    }\n  };\n\n      // Función para manejar el cambio en el campo de código postal\n    const handleCodigoPostalChange = (e) => {\n      // Permitimos solo números\n      const value = e.target.value;\n      // Verificamos si la entrada solo contiene números\n      if (/^\\d*$/.test(value)) {\n        setPersona({ ...persona, codigoPostal: value });\n      }\n    };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return (\n    <Container className=\"contenedor-formulario\">\n      <Card className=\"formulario-card\">\n        <h3 className=\"titulo-formulario\">Añadir Persona</h3>\n\n    \n\n        <Form onSubmit={agregarPersona}>\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"nombre\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Introduce nombre\" name=\"nombre\" value={persona.nombre} onChange={handleChange} className=\"form-control-custom\" />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"apellido\">\n              <Form.Label>Apellido</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Introduce apellido\" name=\"apellido\" value={persona.apellido} onChange={handleChange} className=\"form-control-custom\" />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"direccion\" className=\"mb-4\">\n            <Form.Label>Dirección</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Introduce dirección\" name=\"direccion\" value={persona.direccion} onChange={handleChange} className=\"form-control-custom\" />\n          </Form.Group>\n\n          <Row className=\"mb-4\">\n          <Form.Group as={Col} controlId=\"codigoPostal\">\n  <Form.Label>Código Postal</Form.Label>\n  <Form.Control\n    type=\"text\"\n    placeholder=\"Introduce código postal\"\n    name=\"codigoPostal\"\n    value={persona.codigoPostal}\n    onChange={(e) => handleCodigoPostalChange(e)} // Llamada al nuevo manejador\n    className=\"form-control-custom\"\n  />\n</Form.Group>\n\n            <Form.Group as={Col} controlId=\"ciudad\">\n              <Form.Label>Ciudad</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Introduce ciudad\" name=\"ciudad\" value={persona.ciudad} onChange={handleChange} className=\"form-control-custom\" />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"fechaNacimiento\" className=\"mb-4\">\n            <Form.Label>Fecha de Nacimiento</Form.Label>\n            <Form.Control type=\"date\" name=\"fechaNacimiento\" value={persona.fechaNacimiento} onChange={handleChange} className=\"form-control-custom\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label>Tutoriales asignados</Form.Label>\n            <div>{selectedTutorials.length > 0 ? `Seleccionados: ${selectedTutorials.map(tut => tut.title).join(\", \")}` : \"Ningún tutorial seleccionado\"}</div>\n            <Button className=\"button-custom mt-2\" onClick={openTutorialModal}>Seleccionar Tutoriales</Button>\n          </Form.Group>\n\n          <Button type=\"submit\" className=\"boton-enviar\">Añadir</Button>\n             {/* Mostrar el mensaje de error con Alert si hay un error */}\n             {errorMessage && (\n          <Alert variant=\"danger\" className='mt-4'>\n            <strong>{errorMessage}</strong>\n          </Alert>\n        )}\n        </Form>\n      </Card>\n\n      \n\n      <Modal show={showTutorialModal} onHide={closeTutorialModal} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Seleccionar Tutoriales</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"tutorials-grid\">\n            {availableTutorials.map((tutorial) => (\n              <div key={tutorial.id} className={`tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`} onClick={() => toggleTutorialSelection(tutorial.id)}>\n                <img src={tutorial.url || \"https://via.placeholder.com/80\"} alt={tutorial.title} className=\"tutorial-img\" />\n                <div>\n                  <h5 className=\"tutorial-title\">{tutorial.title}</h5>\n                  <p className=\"tutorial-description\">{tutorial.description || \"Sin descripción\"}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"confirm-button\" onClick={closeTutorialModal}>Confirmar selección</Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Añadir;\n"]},"metadata":{},"sourceType":"module"}