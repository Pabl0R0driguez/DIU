{"ast":null,"code":"var _jsxFileName = \"/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js\";\nimport React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Editar.css';\n\nfunction EditPersona() {\n  var _location$state;\n\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.updatePersonaInList;\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: [] // Guardaremos los títulos de los tutoriales\n\n  });\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n  useEffect(() => {\n    TutorialDataService.getAllTutorials().then(response => setAvailableTutorials(response.data)).catch(error => console.error('Error al cargar tutoriales:', error));\n    AgendaDataService.getPersona(id).then(response => {\n      setPersona(response.data); // Al obtener la persona, cargamos los nombres de los tutoriales\n\n      setSelectedTutorials(response.data.tutoriales || []);\n    }).catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = e => {\n    e.preventDefault(); // Guardamos solo los títulos de los tutoriales seleccionados\n\n    const personaData = { ...persona,\n      tutoriales: selectedTutorials\n    };\n    AgendaDataService.updatePersona(id, personaData).then(() => {\n      if (updatePersonaInList) updatePersonaInList(personaData);\n      history.push(\"/\");\n    }).catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPersona({ ...persona,\n      [name]: value\n    });\n  };\n\n  const toggleTutorialSelection = tutorialId => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title)); // Filtramos por título\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]); // Añadimos el título\n      }\n    }\n  };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return React.createElement(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: 'calc(100vh - 56px)',\n      fontFamily: \"'Poppins', sans-serif\",\n      marginTop: '2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '100%',\n      maxWidth: '600px',\n      padding: '2rem',\n      borderRadius: '20px',\n      boxShadow: '0 10px 20px rgba(0, 0, 0, 0.1)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"mb-4 text-center\",\n    style: {\n      fontWeight: 'bold',\n      color: '#125b96'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Editar Persona\"), React.createElement(Form, {\n    onSubmit: editPersona,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce nombre\",\n    name: \"nombre\",\n    value: persona.nombre,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"apellido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Apellido\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce apellido\",\n    name: \"apellido\",\n    value: persona.apellido,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"direccion\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Direcci\\xF3n\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce direcci\\xF3n\",\n    name: \"direccion\",\n    value: persona.direccion,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Row, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"codigoPostal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"C\\xF3digo Postal\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce c\\xF3digo postal\",\n    name: \"codigoPostal\",\n    value: persona.codigoPostal,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"ciudad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Ciudad\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Introduce ciudad\",\n    name: \"ciudad\",\n    value: persona.ciudad,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"fechaNacimiento\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Fecha de Nacimiento\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"fechaNacimiento\",\n    value: persona.fechaNacimiento,\n    onChange: handleChange,\n    className: \"form-control-custom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontWeight: '600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Tutoriales asignados\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, selectedTutorials.length > 0 ? `Seleccionados: ${selectedTutorials.join(\", \")}` : \"Ningún tutorial seleccionado\"), React.createElement(Button, {\n    className: \"button-custom mt-2\",\n    onClick: openTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"w-100\",\n    style: {\n      borderRadius: '10px',\n      fontWeight: '600',\n      padding: '12px',\n      fontSize: '1rem',\n      backgroundColor: '#125b96',\n      borderColor: '#125b96',\n      transition: 'all 0.3s ease'\n    },\n    onMouseEnter: e => e.target.style.backgroundColor = '#007bff',\n    onMouseLeave: e => e.target.style.backgroundColor = '#125b96',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Actualizar\"))), React.createElement(Modal, {\n    show: showTutorialModal,\n    onHide: closeTutorialModal,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Seleccionar Tutoriales\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tutorials-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, availableTutorials.map(tutorial => React.createElement(\"div\", {\n    key: tutorial.id,\n    className: `tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`,\n    onClick: () => toggleTutorialSelection(tutorial.id),\n    style: {\n      border: \"1px solid #ddd\",\n      borderRadius: \"10px\",\n      padding: \"10px\",\n      marginBottom: \"10px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      transition: \"0.3s\",\n      backgroundColor: selectedTutorials.some(tut => tut.id === tutorial.id) ? \"#f0f8ff\" : \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tutorial.url || \"https://via.placeholder.com/80\" // Imagen por defecto si no hay URL\n    ,\n    alt: tutorial.title,\n    style: {\n      width: \"80px\",\n      height: \"80px\",\n      borderRadius: \"8px\",\n      marginRight: \"10px\",\n      objectFit: \"cover\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    style: {\n      margin: 0,\n      fontSize: \"16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, tutorial.title), React.createElement(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      color: \"#666\",\n      margin: \"5px 0 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, tutorial.description || \"Sin descripción\")))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    onClick: closeTutorialModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Confirmar selecci\\xF3n\"))));\n}\n\nexport default EditPersona;","map":{"version":3,"sources":["/media/pablo/137624ed-270b-478a-b945-4e982e255fb2/pablo/DIU/2TRIMESTRE/ProyectoFinal2T/FrontAgendav2(Final)/src/components/Editar.js"],"names":["React","useEffect","useState","AgendaDataService","TutorialDataService","useHistory","useLocation","Modal","ListGroup","Form","Button","Container","Col","Row","Card","EditPersona","id","window","location","pathname","split","history","updatePersonaInList","state","persona","setPersona","nombre","apellido","direccion","codigoPostal","ciudad","fechaNacimiento","tutoriales","availableTutorials","setAvailableTutorials","selectedTutorials","setSelectedTutorials","showTutorialModal","setShowTutorialModal","getAllTutorials","then","response","data","catch","error","console","getPersona","editPersona","e","preventDefault","personaData","updatePersona","push","handleChange","name","value","target","toggleTutorialSelection","tutorialId","tutorial","find","tut","includes","title","filter","openTutorialModal","closeTutorialModal","minHeight","fontFamily","marginTop","width","maxWidth","padding","borderRadius","boxShadow","fontWeight","color","length","join","fontSize","backgroundColor","borderColor","transition","style","map","some","border","marginBottom","display","alignItems","cursor","url","height","marginRight","objectFit","margin","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AgendaDataService from '../services/agenda.service';\nimport TutorialDataService from '../services/tutorial.service';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Modal, ListGroup, Form, Button, Container, Col, Row, Card } from 'react-bootstrap';\nimport '../styles/Editar.css';\n\nfunction EditPersona() {\n  const id = window.location.pathname.split('/')[2];\n  const history = useHistory();\n  const location = useLocation();\n  const updatePersonaInList = location.state?.updatePersonaInList;\n\n  const [persona, setPersona] = useState({\n    id: id,\n    nombre: '',\n    apellido: '',\n    direccion: '',\n    codigoPostal: '',\n    ciudad: '',\n    fechaNacimiento: '',\n    tutoriales: [] // Guardaremos los títulos de los tutoriales\n  });\n\n  const [availableTutorials, setAvailableTutorials] = useState([]);\n  const [selectedTutorials, setSelectedTutorials] = useState([]);\n  const [showTutorialModal, setShowTutorialModal] = useState(false);\n\n  useEffect(() => {\n    TutorialDataService.getAllTutorials()\n      .then(response => setAvailableTutorials(response.data))\n      .catch(error => console.error('Error al cargar tutoriales:', error));\n\n    AgendaDataService.getPersona(id)\n      .then(response => {\n        setPersona(response.data);\n        // Al obtener la persona, cargamos los nombres de los tutoriales\n        setSelectedTutorials(response.data.tutoriales || []);\n      })\n      .catch(error => console.error(\"Error al obtener la persona:\", error));\n  }, [id]);\n\n  const editPersona = (e) => {\n    e.preventDefault();\n    // Guardamos solo los títulos de los tutoriales seleccionados\n    const personaData = { ...persona, tutoriales: selectedTutorials };\n    AgendaDataService.updatePersona(id, personaData)\n      .then(() => {\n        if (updatePersonaInList) updatePersonaInList(personaData);\n        history.push(\"/\");\n      })\n      .catch(error => console.error(\"Error al actualizar la persona:\", error));\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPersona({\n      ...persona,\n      [name]: value,\n    });\n  };\n\n  const toggleTutorialSelection = (tutorialId) => {\n    const tutorial = availableTutorials.find(tut => tut.id === tutorialId);\n\n    if (tutorial) {\n      if (selectedTutorials.includes(tutorial.title)) {\n        setSelectedTutorials(selectedTutorials.filter(title => title !== tutorial.title)); // Filtramos por título\n      } else {\n        setSelectedTutorials([...selectedTutorials, tutorial.title]); // Añadimos el título\n      }\n    }\n  };\n\n  const openTutorialModal = () => setShowTutorialModal(true);\n  const closeTutorialModal = () => setShowTutorialModal(false);\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: 'calc(100vh - 56px)', fontFamily: \"'Poppins', sans-serif\", marginTop: '2rem' }}>\n      <Card style={{ width: '100%', maxWidth: '600px', padding: '2rem', borderRadius: '20px', boxShadow: '0 10px 20px rgba(0, 0, 0, 0.1)' }}>\n        <h3 className=\"mb-4 text-center\" style={{ fontWeight: 'bold', color: '#125b96' }}>Editar Persona</h3>\n        <Form onSubmit={editPersona}>\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"nombre\">\n              <Form.Label style={{ fontWeight: '600' }}>Nombre</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce nombre\"\n                name=\"nombre\"\n                value={persona.nombre}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"apellido\">\n              <Form.Label style={{ fontWeight: '600' }}>Apellido</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce apellido\"\n                name=\"apellido\"\n                value={persona.apellido}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"direccion\" className=\"mb-4\">\n            <Form.Label style={{ fontWeight: '600' }}>Dirección</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Introduce dirección\"\n              name=\"direccion\"\n              value={persona.direccion}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Row className=\"mb-4\">\n            <Form.Group as={Col} controlId=\"codigoPostal\">\n              <Form.Label style={{ fontWeight: '600' }}>Código Postal</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce código postal\"\n                name=\"codigoPostal\"\n                value={persona.codigoPostal}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"ciudad\">\n              <Form.Label style={{ fontWeight: '600' }}>Ciudad</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Introduce ciudad\"\n                name=\"ciudad\"\n                value={persona.ciudad}\n                onChange={handleChange}\n                className=\"form-control-custom\"\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"fechaNacimiento\" className=\"mb-4\">\n            <Form.Label style={{ fontWeight: '600' }}>Fecha de Nacimiento</Form.Label>\n            <Form.Control\n              type=\"date\"\n              name=\"fechaNacimiento\"\n              value={persona.fechaNacimiento}\n              onChange={handleChange}\n              className=\"form-control-custom\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label style={{ fontWeight: '600' }}>Tutoriales asignados</Form.Label>\n            <div>\n              {selectedTutorials.length > 0\n                ? `Seleccionados: ${selectedTutorials.join(\", \")}`\n                : \"Ningún tutorial seleccionado\"}\n            </div>\n            <Button className=\"button-custom mt-2\" onClick={openTutorialModal}>\n              Seleccionar Tutoriales\n            </Button>\n          </Form.Group>\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            className=\"w-100\"\n            style={{\n              borderRadius: '10px',\n              fontWeight: '600',\n              padding: '12px',\n              fontSize: '1rem',\n              backgroundColor: '#125b96',\n              borderColor: '#125b96',\n              transition: 'all 0.3s ease',\n            }}\n            onMouseEnter={(e) => (e.target.style.backgroundColor = '#007bff')}\n            onMouseLeave={(e) => (e.target.style.backgroundColor = '#125b96')}\n          >\n            Actualizar\n          </Button>\n        </Form>\n      </Card>\n\n      {/* Modal para seleccionar tutoriales */}\n      <Modal show={showTutorialModal} onHide={closeTutorialModal} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Seleccionar Tutoriales</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n           <div className=\"tutorials-grid\">\n             {availableTutorials.map((tutorial) => (\n               <div\n                 key={tutorial.id}\n                 className={`tutorial-card ${selectedTutorials.some(tut => tut.id === tutorial.id) ? \"selected\" : \"\"}`}\n                 onClick={() => toggleTutorialSelection(tutorial.id)}\n                 style={{\n                   border: \"1px solid #ddd\",\n                   borderRadius: \"10px\",\n                   padding: \"10px\",\n                   marginBottom: \"10px\",\n                   display: \"flex\",\n                   alignItems: \"center\",\n                   cursor: \"pointer\",\n                   transition: \"0.3s\",\n                   backgroundColor: selectedTutorials.some(tut => tut.id === tutorial.id) ? \"#f0f8ff\" : \"#fff\"\n                 }}\n               >\n                 <img\n                   src={tutorial.url || \"https://via.placeholder.com/80\"} // Imagen por defecto si no hay URL\n                   alt={tutorial.title}\n                   style={{ width: \"80px\", height: \"80px\", borderRadius: \"8px\", marginRight: \"10px\", objectFit: \"cover\" }}\n                 />\n                 <div>\n                   <h5 style={{ margin: 0, fontSize: \"16px\" }}>{tutorial.title}</h5>\n                   <p style={{ fontSize: \"14px\", color: \"#666\", margin: \"5px 0 0\" }}>\n                     {tutorial.description || \"Sin descripción\"}\n                   </p>\n                 </div>\n               </div>\n             ))}\n           </div>\n                 </Modal.Body>\n             <Modal.Footer>\n               <Button variant=\"primary\" onClick={closeTutorialModal}>\n                 Confirmar selección\n               </Button>\n             </Modal.Footer>\n           </Modal>\n    </Container>\n  );\n}\n\nexport default EditPersona;\n"]},"metadata":{},"sourceType":"module"}